[{"path":"https://connie-zhang.github.io/UWBiost561/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 UWBiost561 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Connie Zhang. Author, maintainer.","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang C (2024). UWBiost561: UW Biost 561 Class Projects Folder. R package version 0.0.0.9000,  https://connie-zhang.github.io/UWBiost561/, https://Connie-Zhang.github.io/UWBiost561/.","code":"@Manual{,   title = {UWBiost561: UW Biost 561 Class Projects Folder},   author = {Connie Zhang},   year = {2024},   note = {R package version 0.0.0.9000,  https://connie-zhang.github.io/UWBiost561/},   url = {https://Connie-Zhang.github.io/UWBiost561/}, }"},{"path":"https://connie-zhang.github.io/UWBiost561/index.html","id":"purpose","dir":"","previous_headings":"","what":"UW Biost 561 Class Projects Folder","title":"UW Biost 561 Class Projects Folder","text":"final project UW BIOST 561 (Spring 2024), taught Kevin Lin. URL GitHub : https://github.com/Connie-Zhang/UWBiost561 URL Pckdown webpage :","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"UW Biost 561 Class Projects Folder","text":"package called “UWBiost561”. install, run following code (R):","code":"library(devtools) devtools::install_github(\"Connie-Zhang/UWBiost561\")"},{"path":"https://connie-zhang.github.io/UWBiost561/index.html","id":"dependensies","dir":"","previous_headings":"","what":"Dependensies","title":"UW Biost 561 Class Projects Folder","text":"package dependensies.","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/index.html","id":"session-info","dir":"","previous_headings":"","what":"Session info","title":"UW Biost 561 Class Projects Folder","text":"package developed following environment","code":"devtools::session_info()"},{"path":"https://connie-zhang.github.io/UWBiost561/reference/compute_maximal_partial_clique.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique","text":"Enumerate row find edges Start first row first partial clique subsequent row, check connects existing partial cliques. , append existing partial cliques; , create new partial clique row. Return partial clique nodes","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/compute_maximal_partial_clique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique","text":"","code":"compute_maximal_partial_clique(adj_mat, alpha)"},{"path":"https://connie-zhang.github.io/UWBiost561/reference/compute_maximal_partial_clique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique","text":"adj_mat symmetric adjacency matrix alpha edge density adjacency matrix","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/compute_maximal_partial_clique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique","text":"list containing indices maximal partial clique, edge density maximal partial clique, partial cliques adjacency matrix","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/compute_maximal_partial_clique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique","text":"","code":"adj_mat <- generate_partial_clique(10,0.5,0.5)$adj_mat compute_maximal_partial_clique(adj_mat, 0.5)$clique_idx #>  [1]  1  3  4  5  6  7  8  2  9 10"},{"path":"https://connie-zhang.github.io/UWBiost561/reference/generate_partial_clique.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a partial clique in a matrix — generate_partial_clique","title":"Generate a partial clique in a matrix — generate_partial_clique","text":"Generate symmetric adjacent matrix specified size Replace upper left corner original matrix 1s clique_edge_density create partial clique. Symmetrize matrix. Randomize matrix keep track order randomization","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/generate_partial_clique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a partial clique in a matrix — generate_partial_clique","text":"","code":"generate_partial_clique(n, clique_fraction = 0.5, clique_edge_density = 1)"},{"path":"https://connie-zhang.github.io/UWBiost561/reference/generate_partial_clique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a partial clique in a matrix — generate_partial_clique","text":"n size matrix clique_fraction fraction matrix clique clique_edge_density edge density clique","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/generate_partial_clique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a partial clique in a matrix — generate_partial_clique","text":"list containing matrix partial clique, randomized matrix, order randomization","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/generate_partial_clique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a partial clique in a matrix — generate_partial_clique","text":"","code":"generate_partial_clique(10,0.5,0.5) #> $adj_mat #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    0    0    0    1    1    1    1    1     0 #>  [2,]    0    1    0    0    0    0    1    1    1     0 #>  [3,]    0    0    1    1    1    1    0    0    0     0 #>  [4,]    0    0    1    1    1    1    1    1    1     0 #>  [5,]    1    0    1    1    1    1    1    0    1     1 #>  [6,]    1    0    1    1    1    1    1    1    1     0 #>  [7,]    1    1    0    1    1    1    1    1    0     1 #>  [8,]    1    1    0    1    0    1    1    1    0     1 #>  [9,]    1    1    0    1    1    1    0    0    1     1 #> [10,]    0    0    0    0    1    0    1    1    1     1 #>  #> $rev_mat #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    1    0    1    0    1    1    0    0     1 #>  [2,]    1    1    1    0    0    1    1    1    1     1 #>  [3,]    0    1    1    1    1    1    1    0    0     1 #>  [4,]    1    0    1    1    0    0    1    1    1     1 #>  [5,]    0    0    1    0    1    0    1    0    0     1 #>  [6,]    1    1    1    0    0    1    1    1    1     0 #>  [7,]    1    1    1    1    1    1    1    0    0     1 #>  [8,]    0    1    0    1    0    1    0    1    0     1 #>  [9,]    0    1    0    1    0    1    0    0    1     0 #> [10,]    1    1    1    1    1    0    1    1    0     1 #>  #> $rev_order #>  [1]  1  9  5  3 10  7  2  6  4  8 #>"},{"path":"https://connie-zhang.github.io/UWBiost561/reference/reorder_clique.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder adjacency matrix — reorder_clique","title":"Reorder adjacency matrix — reorder_clique","text":"Reorder adjacency matrix according given order.","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/reorder_clique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder adjacency matrix — reorder_clique","text":"","code":"reorder_clique(adj_mat, order)"},{"path":"https://connie-zhang.github.io/UWBiost561/reference/reorder_clique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder adjacency matrix — reorder_clique","text":"adj_mat symmetric adjacency matrix order permutation row column indices","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/reorder_clique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder adjacency matrix — reorder_clique","text":"symmetric adjacency matrix rows columns reordered according given order","code":""},{"path":"https://connie-zhang.github.io/UWBiost561/reference/reorder_clique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder adjacency matrix — reorder_clique","text":"","code":"adj_mat <- generate_partial_clique(10,0.5,0.5)$adj_mat order <- sample(10,10,replace=FALSE) reorder_clique(adj_mat, order) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    1    1    1    1    1    1    0    1     0 #>  [2,]    1    1    1    0    1    0    0    0    0     1 #>  [3,]    1    1    1    1    1    1    1    0    1     1 #>  [4,]    1    0    1    1    1    1    1    0    0     0 #>  [5,]    1    1    1    1    1    0    1    1    1     1 #>  [6,]    1    0    1    1    0    1    1    0    1     1 #>  [7,]    1    0    1    1    1    1    1    1    1     1 #>  [8,]    0    0    0    0    1    0    1    1    1     0 #>  [9,]    1    0    1    0    1    1    1    1    1     0 #> [10,]    0    1    1    0    1    1    1    0    0     1"}]
